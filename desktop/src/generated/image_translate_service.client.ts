// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "image_translate_service.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ImageTranslateService } from "./image_translate_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ImageTranslateResponse } from "./image_translate_service";
import type { ImageTranslateRequest } from "./image_translate_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service ImageTranslateService
 */
export interface IImageTranslateServiceClient {
    /**
     * @generated from protobuf rpc: Translate(ImageTranslateRequest) returns (ImageTranslateResponse);
     */
    translate(input: ImageTranslateRequest, options?: RpcOptions): UnaryCall<ImageTranslateRequest, ImageTranslateResponse>;
}
/**
 * @generated from protobuf service ImageTranslateService
 */
export class ImageTranslateServiceClient implements IImageTranslateServiceClient, ServiceInfo {
    typeName = ImageTranslateService.typeName;
    methods = ImageTranslateService.methods;
    options = ImageTranslateService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Translate(ImageTranslateRequest) returns (ImageTranslateResponse);
     */
    translate(input: ImageTranslateRequest, options?: RpcOptions): UnaryCall<ImageTranslateRequest, ImageTranslateResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ImageTranslateRequest, ImageTranslateResponse>("unary", this._transport, method, opt, input);
    }
}
